---
swagger: "2.0"
info:
  description: "Get the Music relationships."
  version: "1.0.0"
  title: "Relationship API"

basePath: "/relationship"
schemes:
- "http"
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
produces:
- "application/json"
paths:
  /getRelationships:
    post:
      security:
      - basicAuth: []
      tags:
      - "GetRelationships"
      summary: "Get the relationships from the given set of text array / file"
      description: "The GetRelationships endpoint returns all the relationships found
        in the text by running an algorithm on it. The response includes relationship and two entities"
      operationId: "getRelationshipsPOST"
      parameters:
      - name: "article"
        in: "query"
        description: "The Path of the file where the text is present"
        required: true
        type: "string"
        format: "url"

      - name: "occurences"
        in: "body"
        description: "The occurence of entities present in the file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Occurence"
      responses:
        200:
          description: "An array of Relationships[E1, Relation, E2]"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Relationships"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "GetRelationships"

  /getAllSentences:
    post:
      security:
      - basicAuth: []
      tags:
      - "GetAllSentences"
      summary: "Get the relationships from the given set of text array / file"
      description: "The GetRelationships endpoint returns all the relationships found
        in the text by running an algorithm on it. The response includes relationship and two entities"
      operationId: "getAllSentencesPOST"
      parameters:
      - name: "article"
        in: "query"
        description: "The Path of the file where the text is present"
        required: true
        type: "string"
        format: "url"

      - name: "occurences"
        in: "body"
        description: "The occurence of entities present in the file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Occurence"
      responses:
        200:
          description: "An array of sentences"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "GetAllSentences"
  /getAllEntities:
    post:
      security:
      - basicAuth: []
      tags:
      - "GetAllEntities"
      summary: "Get the relationships from the given set of text array / file"
      description: "The GetRelationships endpoint returns all the relationships found
        in the text by running an algorithm on it. The response includes relationship and two entities"
      operationId: "getAllEntitiesPOST"
      parameters:
      - name: "article"
        in: "query"
        description: "The Path of the file where the text is present"
        required: true
        type: "string"
        format: "url"

      - name: "occurences"
        in: "body"
        description: "The occurence of entities present in the file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Occurence"
      responses:
        200:
          description: "An array of all entities"
          schema:
            type: "array"
            items:
             type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "GetAllEntities"

  /getAllEntitySentences:
    post:
      security:
      - basicAuth: []
      tags:
      - "GetAllEntitySentences"
      summary: "Get the relationships from the given set of text array / file"
      description: "The GetRelationships endpoint returns all the relationships found
        in the text by running an algorithm on it. The response includes relationship and two entities"
      operationId: "getAllEntitySentencesPOST"
      parameters:
      - name: "article"
        in: "query"
        description: "The Path of the file where the text is present"
        required: true
        type: "string"
        format: "url"

      - name: "occurences"
        in: "body"
        description: "The occurence of entities present in the file"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Occurence"
      responses:
        200:
          description: "An array of entity and its sentences"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntitySentences"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "GetAllEntitySentences"

definitions:
  Relationships:
    type: "object"
    properties:
      entity1:
        type: "string"
        description: "First entity"
      relation:
        type: "string"
        description: "Relation Between Entities"
      entity2:
        type: "string"
        description: "Second entity"
  Occurence:
    type: "object"
    properties:
      term:
        type: "string"
        description: "Entity name "
      role:
        type: "string"
        description: "Role of the Entity like composer/city/Piece"
      positions:
        type: "array"
        description: "Entity name "
        items: {
          type: "number"
        }
  EntitySentences:
    type: "object"
    properties:
      entitySentences:
        type: "array"
        description: "All the sentences for that entity, here entity are chosed based upon the number given in the input"
        items: {
          type: "string"
        }
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
